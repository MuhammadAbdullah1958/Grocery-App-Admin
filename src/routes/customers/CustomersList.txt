import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import CircularProgress from "@material-ui/core/CircularProgress";
import * as Actions from "store/actions";
import History from "@history";
import "./tagStyles.css";
import { Button } from "reactstrap";

const ViewCustomer = (props) => {
  const dispatch = useDispatch();
  const customerId = parseInt(props.match.params.id);
  const [customer, setCustomer] = useState(null);

  const customerData = useSelector(({ customers }) => customers);

  useEffect(() => {
    dispatch(Actions.CustomerLoading(true));
    dispatch(Actions.customerDetailAdmin(customerId));
  }, [dispatch, customerId]);

  useEffect(() => {
    setCustomer(customerData);
  }, [customerData]);

  if (customer && customer.error) {
    return (
      <div
        className="page-loader d-flex flex-column justify-content-center align-items-center"
        style={{ minHeight: "300px" }}
      >
        <h2>Error! Cannot fetch customer.</h2>
        <Button color="danger" className="mt-3" onClick={props.history.goBack}>
          Back
        </Button>
      </div>
    );
  }

  if (customer === null || !customer.customerDetail) {
    return (
      <div
        className="page-loader d-flex justify-content-center mb-30"
        style={{ height: "500px" }}
      >
        <CircularProgress style={{ margin: "auto" }} />
      </div>
    );
  }
  return (
    <div className="formelements-wrapper">
      <div className="page-title">
        <div className="page-title-wrap">
          <i
            style={{ cursor: "pointer" }}
            onClick={props.history.goBack}
            className="ti-angle-left"
          ></i>
          <h2 className="">View Customer</h2>
        </div>
      </div>
      <div className="container">
        <div className="rct-block">
          {customer.Loading ? (
            <div
              className="page-loader d-flex justify-content-center mb-30"
              style={{ minHeight: "300px" }}
            >
              <CircularProgress style={{ margin: "auto" }} />
            </div>
          ) : (
            <div className="cust-info-main">
              <div className="cust-info-header">
                <span>Customer ID : {customer.customerDetail.id}</span>
              </div>
              <div className="cust-info-container">
                <div className="row">
                  <div className="col-md-6">
                    <div className="cust-div-info">
                      <p className="cust-info-key">First Name</p>
                      <p className="cust-info-val">
                        {customer.customerDetail.fullName}
                      </p>
                    </div>
                    <div className="cust-div-info">
                      <p className="cust-info-key">Email</p>
                      <p className="cust-info-val">
                        {customer.customerDetail.email}
                      </p>
                    </div>
                    <div className="cust-div-info">
                      <p className="cust-info-key">Phone</p>
                      <p className="cust-info-val">
                        {customer.customerDetail.phone}
                      </p>
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="cust-div-info">
                      <p className="cust-info-key">Status</p>
                      <p className="cust-info-val">
                        {customer.customerDetail.status ? "Active" : "Banned"}
                      </p>
                    </div>
                    <div className="cust-div-info">
                      <p className="cust-info-key">City</p>
                      <p className="cust-info-val">
                        {customer.customerDetail.city
                          ? customer.customerDetail.city
                          : "Nill"}
                      </p>
                    </div>
                    <div className="cust-div-info">
                      <p className="cust-info-key">Address</p>
                      <p className="cust-info-val">
                        {customer.customerDetail.address
                          ? customer.customerDetail.address
                          : "Nill"}
                      </p>
                    </div>
                  </div>
                </div>
                <div className="cust-btn-div">
                  <Button
                    color="primary"
                    onClick={() =>
                      History.push({
                        pathname: `/admin/edit-customer/${customer.customerDetail.id}`,
                      })
                    }
                  >
                    Edit
                  </Button>
                  <Button
                    color="danger"
                    className="ml-2"
                    onClick={props.history.goBack}
                  >
                    Back
                  </Button>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ViewCustomer;
